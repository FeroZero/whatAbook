@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using WhatABook.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Log in</PageTitle>

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4" style="max-width: 400px; width: 100%; border-radius: 15px;">
        <div class="text-center">
            <h1 class="mb-4" style="color: #f9a825;">WhatABook 📖</h1>
            <h2 class="h5 mb-3">Log in to your account</h2>
        </div>
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <!-- Email Input -->
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" placeholder="Email" />
                <label for="email">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>

            <!-- Password Input -->
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" placeholder="Password" />
                <label for="password">Password</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>

            <!-- Remember Me -->
            <div class="form-check mb-3">
                <InputCheckbox @bind-Value="Input.RememberMe" class="form-check-input" />
                <label class="form-check-label" for="rememberMe">Remember me</label>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary w-100" style="background-color: #f9a825; border: none; border-radius: 25px;">Log in</button>
        </EditForm>

        <hr class="my-4">

        <!-- Additional Links -->
        <div class="text-center">
            <p><a href="Account/ForgotPassword" style="color: #f9a825;">Forgot your password?</a></p>
            <p><a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))" style="color: #f9a825;">Register as a new user</a></p>
        </div>
    </div>
</div>

@code {
    private string? errorMessage;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");

            var user = await SignInManager.UserManager.FindByEmailAsync(Input.Email);
          
            if (Input.Email == "Admin@gmail.com")
            {
                NavigationManager.NavigateTo("/Index/Admin");
            }

            else
            {
                
                NavigationManager.NavigateTo("/");
            }
        }
        
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}